<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hlframe.modules.dc.metadata.dao.DcObjectFileDao">
    
	<sql id="dcObjectFileColumns">
		a.OBJ_ID AS "id",
		a.FILE_NAME AS "fileName",
		a.FILE_BELONG AS "fileBelong",
		a.FILE_URL AS "fileUrl",
		a.IS_STRUCT AS "isStruct",
		a.SPLITTER AS "splitter",
		a.REMARKS AS "remarks"
	</sql>
	<sql id="files4esColumns">
		group_concat(CONCAT(cata.CATA_FULLPATH,cata.ID) separator ';') as catalogsPath,
		file.FILE_NAME AS fileName,
		file.FILE_BELONG AS fileBelong,
		file.FILE_URL AS fileUrl,
		file.IS_STRUCT AS isStruct,
		file.SPLITTER AS splitter,
		file.REMARKS AS aremarks,
		obj.ID AS id,
		obj.OBJ_CODE AS objCode,
		obj.OBJ_TYPE AS objType,
		obj.OBJ_NAME AS objName,
		obj.OBJ_DESC AS objDesc,
		obj.SYSTEM_ID AS systemId,
		obj.MANAGER_PER AS managerPer,
		obj.MANAGER_ORG AS managerOrg,
		obj.REMARKS AS bremarks,
		obj.SORT_NUM AS sortNum,
		obj.CREATE_BY AS createBy,
		obj.CREATE_DATE AS createDate,
		obj.UPDATE_BY AS updateBy,
		obj.UPDATE_DATE AS updateDate
	</sql>
	<sql id="dcObjectFileJoins">
	</sql>
	<sql id="fileJoinsWithCataDetail">
		INNER JOIN dc_obj_file file ON file.OBJ_ID = obj.ID INNER JOIN dc_obj_cata_ref ref on ref.OBJ_ID = obj.ID INNER JOIN dc_cata_detail cata on cata.ID = ref.CATA_ID
	</sql>
	<select id="get" resultType="DcObjectFile" >
		SELECT 
			<include refid="dcObjectFileColumns"/>
		FROM dc_obj_file a
		<include refid="dcObjectFileJoins"/>
		WHERE a.OBJ_ID = #{id}
	</select>
	
	<select id="findList" resultType="DcObjectFile" >
		SELECT 
			<include refid="dcObjectFileColumns"/>
		FROM dc_obj_file a
		<include refid="dcObjectFileJoins"/>
		<where>
			<if test="fileName != null and fileName != ''"> AND a.FILE_NAME=#{fileName} </if>
			<if test="fileBelong != null and fileBelong != ''"> AND a.FILE_BELONG=#{fileBelong} </if>
			<if test="fileUrl != null and fileUrl != ''"> AND a.FILE_URL=#{fileUrl} </if>
		</where>
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
		</choose>
	</select>
	

    <!-- 构建完整的文件对象 peijd -->
	<select id="buildFileInfo" resultType="DcObjectFileInfo" >
		SELECT
			m.OBJ_CODE AS "objCode",
			m.OBJ_NAME AS "objName",
			m.OBJ_TYPE AS "objType",
			m.SYSTEM_ID AS "systemId",
			m.OBJ_DESC AS "objDesc",
			m.MANAGER_PER AS "managerPer",
			m.MANAGER_ORG AS "managerOrg",
			m.JOB_ID AS "jobId",
			m.JOB_TYPE AS "jobType",
			m.JOB_SRC_FLAG AS "jobSrcFlag",
			m.sort_Num AS "sortNum",
			m.status AS "status",
			m.create_by AS "createBy.id",
			m.create_date AS "createDate",
			m.update_by AS "updateBy.id",
			m.update_date AS "updateDate",
			m.del_flag AS "delFlag",
			u2.id AS "user.id",
			u2. NAME AS "user.name",
			o2.id AS "office.id",
			o2. NAME AS "office.name",
			<include refid="dcObjectFileColumns"/>
		FROM dc_obj_file a
		LEFT JOIN dc_obj_main m on a.OBJ_ID = m.id
		LEFT JOIN sys_user u ON u.id = m.create_by
		LEFT JOIN sys_office o ON o.id = u.office_id
		LEFT JOIN sys_user u2 ON u2.id = m.MANAGER_PER
		LEFT JOIN sys_office o2 ON o2.id = m.MANAGER_ORG
		<include refid="dcObjectFileJoins"/>
		WHERE a.OBJ_ID = #{id}
	</select>

	<!-- 构建文件对象列表 peijd -->
	<select id="buildFileInfoList" resultType="DcObjectFileInfo" >
		SELECT
			m.OBJ_CODE AS "objCode",
			m.OBJ_NAME AS "objName",
			m.OBJ_TYPE AS "objType",
			m.SYSTEM_ID AS "systemId",
			m.OBJ_DESC AS "objDesc",
			m.MANAGER_PER AS "managerPer",
			m.MANAGER_ORG AS "managerOrg",
			m.JOB_ID AS "jobId",
			m.JOB_TYPE AS "jobType",
			m.JOB_SRC_FLAG AS "jobSrcFlag",
			m.sort_Num AS "sortNum",
			m.status AS "status",
			m.create_by AS "createBy.id",
			m.create_date AS "createDate",
			m.update_by AS "updateBy.id",
			m.update_date AS "updateDate",
			m.del_flag AS "delFlag",
			<include refid="dcObjectFileColumns"/>
		FROM dc_obj_file a
		LEFT JOIN dc_obj_main m on a.OBJ_ID = m.id
		<include refid="dcObjectFileJoins"/>
		<where>
			m.del_flag = '0'
			<if test="fileName != null and fileName != ''"> AND a.FILE_NAME=#{fileName} </if>
			<if test="fileBelong != null and fileBelong != ''"> AND a.FILE_BELONG=#{fileBelong} </if>
			<if test="fileUrl != null and fileUrl != ''"> AND a.FILE_URL=#{fileUrl} </if>
			<if test="jobType != null and jobType != ''"> AND m.JOB_TYPE=#{jobType} </if>
			<if test="objType != null and objType != ''"> AND m.OBJ_TYPE=#{objType} </if>
			<if test="id != null and id != ''"> AND m.JOB_ID=#{id} </if>
			<if test="jobSrcFlag != null and jobSrcFlag != ''"> AND m.JOB_SRC_FLAG=#{jobSrcFlag} </if>
		</where>
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
		</choose>
	</select>

	<select id="getByFileBelong" resultType="java.util.HashMap" statementType="STATEMENT" >
	SELECT 
			<include refid="dcObjectFileColumns"/>
		FROM dc_obj_file a
		<include refid="dcObjectFileJoins"/>
		WHERE a.FILE_BELONG = #{fileBelong}
	</select>
	<select  id="dcobjectlist" resultType="DcObjectFile">
		SELECT
		a.id AS "id",
		a.OBJ_CODE AS "objCode",
		a.OBJ_NAME AS "objName",
		case a.OBJ_TYPE when '1' then '数据表' WHEN '2' THEN '文件'   else '文件夹' end as "objType",
		a.SYSTEM_ID AS "systemId",
		a.OBJ_DESC AS "objDesc",
		a.MANAGER_PER AS "managerPer",
		a.MANAGER_ORG AS "managerOrg",
		a.JOB_ID AS "jobId",
		a.JOB_TYPE AS "jobType",
		a.JOB_SRC_FLAG AS "jobSrcFlag",
		a.sort_Num AS "sortNum",
		a. STATUS AS "status",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		u2.id AS "user.id",
		u2. NAME AS "user.name",
		o2.id AS "office.id",
		o2. NAME AS "office.name",
		t.TABLE_NAME AS "tablename",
		IFNULL(s.conn_name,'hive') as "tablelink",
		REPLACE(IFNULL(s.SERVER_TYPE,'hive'),'dc_','')  AS "dbtype",
		t.DB_DATABASE AS "dbdatabase",
		IFNULL(s.CONN_NAME,'hive')  AS "connname",
		case a.OBJ_TYPE when '2' then f.FILE_NAME else g.FOLDER_NAME end AS "fileName",
		case  a.OBJ_TYPE when '2'then f.FILE_URL else g.FOLDER_URL  END AS "fileUrl"
		FROM dc_obj_main a
		LEFT JOIN sys_user u2 ON u2.id = a.MANAGER_PER
		LEFT JOIN sys_office o2 ON o2.id = a.MANAGER_ORG
		LEFT JOIN sys_user u ON u.id = a.create_by
		LEFT JOIN sys_office o ON o.id = u.office_id
		LEFT JOIN dc_obj_table t ON t.OBJ_ID = a.ID
		LEFT JOIN dc_data_source s ON s.ID = t.TABLE_LINK
		LEFT JOIN dc_obj_file f ON f.OBJ_ID = a.ID
		LEFT JOIN dc_obj_folder g ON g.OBJ_ID = a.ID
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="objName != null and objName != ''"> AND instr(a.OBJ_NAME, #{objName})>0 </if>
		<if test="objCode != null and objCode != ''"> AND instr(a.OBJ_CODE, #{objCode})>0 </if>
		<if test="objType != null and objType != ''"> AND a.OBJ_TYPE in (${objType}) </if><!-- 进行对 objType多种条件的一个过滤-->
	</where>
		ORDER BY a.update_date DESC
	</select>
	<select id="getdc" resultType="DcObjectFile">
		SELECT
		a.id AS "id",
		a.OBJ_CODE AS "objCode",
		a.OBJ_NAME AS "objName",
		case a.OBJ_TYPE when '1' then '数据表' WHEN '2' THEN '文件'   else '文件夹' end as "objType",
		a.SYSTEM_ID AS "systemId",
		a.OBJ_DESC AS "objDesc",
		a.MANAGER_PER AS "managerPer",
		a.MANAGER_ORG AS "managerOrg",
		a.JOB_ID AS "jobId",
		a.JOB_TYPE AS "jobType",
		a.JOB_SRC_FLAG AS "jobSrcFlag",
		a.sort_Num AS "sortNum",
		a. STATUS AS "status",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		u2.id AS "user.id",
		u2. NAME AS "user.name",
		o2.id AS "office.id",
		o2. NAME AS "office.name",
		t.TABLE_NAME AS "tablename",
		IFNULL(s.conn_name,'hive') as "tablelink",
		REPLACE(IFNULL(s.SERVER_TYPE,'hive'),'dc_','')  AS "dbtype",
		t.DB_DATABASE AS "dbdatabase",
		IFNULL(s.CONN_NAME,'hive')  AS "connname",
		case a.OBJ_TYPE when '2' then f.FILE_NAME else g.FOLDER_NAME end AS "fileName",
		case  a.OBJ_TYPE when '2'then f.FILE_URL else g.FOLDER_URL  END AS "fileUrl"
		FROM dc_obj_main a
		LEFT JOIN sys_user u2 ON u2.id = a.MANAGER_PER
		LEFT JOIN sys_office o2 ON o2.id = a.MANAGER_ORG
		LEFT JOIN sys_user u ON u.id = a.create_by
		LEFT JOIN sys_office o ON o.id = u.office_id
		LEFT JOIN dc_obj_table t ON t.OBJ_ID = a.ID
		LEFT JOIN dc_data_source s ON s.ID = t.TABLE_LINK
		LEFT JOIN dc_obj_file f ON f.OBJ_ID = a.ID
		LEFT JOIN dc_obj_folder g ON g.OBJ_ID = a.ID
		<where>
			a.ID=#{id}
		</where>
	</select>
	<insert id="insert">
		INSERT INTO dc_obj_file(
			OBJ_ID,
			FILE_NAME,
			FILE_BELONG,
			FILE_URL,
			IS_STRUCT,
			SPLITTER,
			REMARKS
		) VALUES (
			#{id},
			#{fileName},
			#{fileBelong},
			#{fileUrl},
			#{isStruct},
			#{splitter},
			#{remarks}
		)
	</insert>
	
	<update id="update">
		UPDATE dc_obj_file 
		<trim prefix="set" suffixOverrides=",">
			<if test="id != null"> OBJ_ID = #{id}, </if>
			<if test="fileName != null"> FILE_NAME = #{fileName}, </if>
			<if test="fileBelong != null"> FILE_BELONG = #{fileBelong}, </if>
			<if test="fileUrl != null"> FILE_URL = #{fileUrl}, </if>
			<if test="isStruct != null"> IS_STRUCT = #{isStruct}, </if>
			<if test="splitter != null"> SPLITTER = #{splitter}, </if>
			<if test="remarks != null"> REMARKS = #{remarks}, </if>
		</trim>
		WHERE OBJ_ID = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM dc_obj_file
		WHERE OBJ_ID = #{id}
	</update>
	
	<!-- 按照文件归属删除 -->
	<update id="deleteByFileBelong">
	DELETE FROM dc_obj_file
		WHERE FILE_BELONG = #{fileBelong}
	</update>
	
		<!-- 根据名字删除路径记录 -->
	<update id="deleteName">
		DELETE FROM dc_obj_file
		WHERE FILE_URL = #{fileUrl}
	</update>

	<!-- es -->
	<select id="getFiles4es" resultType="java.util.HashMap" >
		SELECT
		<include refid="files4esColumns"/>
		FROM dc_obj_main obj
		<include refid="fileJoinsWithCataDetail"/>
		<where>
			obj.DEL_FLAG = '0' AND obj.OBJ_TYPE = #{OBJ_TYPE_FILE}
			<if test="id != null and id != ''"> AND obj.ID = #{id}</if>
		</where>
		GROUP BY obj.ID
	</select>
</mapper>